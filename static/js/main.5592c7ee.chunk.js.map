{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","containers/robots.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","username","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.5592c7ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ( {name, email, id}) => {\r\n    return(\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"> \r\n            <img alt= 'robot' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n    </div>\r\n    );\r\n    }\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst CardList = ({robots}) => \r\n{\r\n    return (\r\n    <div>{\r\n    robots.map((user, i) => { \r\n                             return (<Card \r\n                                        key={i} \r\n                                        id={robots[i].id} \r\n                                        name={robots[i].name} \r\n                                        email={robots[i].email}\r\n                                    />\r\n                                    ) \r\n                            }\r\n                )\r\n        }\r\n    </div>\r\n        )   \r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\nreturn (\r\n    <div className= 'pa2'>\r\n        <input \r\n            className= 'pa3 b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder=\"search robots\" \r\n            onChange = {searchChange}\r\n        />\r\n    </div>  \r\n        );\r\n}\r\n\r\nexport default SearchBox;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style= {{overflowY: 'scroll', border:'5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\ncomponentDidCatch(error, info){\r\n            this.setState({hasError: true})\r\n}\r\n\r\n    render(){\r\n            if (this.state.hasError){\r\n                return <h1> Ooops! That is not goof </h1>\r\n            }\r\n            return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry ;","import React, {Component} from \"react\";\r\nimport CardList from  '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport {robots} from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n                super();\r\n                this.state = {\r\n                    robots: robots,\r\n                    searchfield:''\r\n                             }\r\n                }\r\n\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n                        }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n            const filteredRobots = robots.filter(robot=>{\r\n                return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            })\r\n\r\n            return !robots.length ?\r\n                <h1> Loading </h1> :\r\n            (\r\n                    <div className='tc' >\r\n                        <h1 className=\"f1\"> RoboFriends</h1>\r\n                        <SearchBox searchChange = {this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <ErrorBoundry>\r\n                                <CardList robots = {filteredRobots}/>\r\n                            </ErrorBoundry>\r\n                        </Scroll>\r\n                    </div>\r\n                    );\r\n            }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\n\n// ReactDOM.render (\n//      <App/> , document.getElementById('root'));\n\n     ReactDOM.createRoot(document.getElementById('root')).render(<App />);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}